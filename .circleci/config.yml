version: 2.1
orbs:
  release-management: salesforce/npm-release-management@4

jobs:
  external-nut:
    description: Runs NUTs from other (external) repos by cloning them.  Substitutes a dependency for the current pull request.  For example, you're testing a PR to a library and want to test a plugin in another repo that uses the library.

    parameters:
      test_command:
        type: string
        description: 'command to execute (ex: yarn test:nuts)'
        default: 'yarn test:nuts'
      node_version:
        description: version of node to run tests against
        type: string
        default: 'lts'
      os:
        description: operating system to run tests on
        type: enum
        enum: ['linux', 'windows']
        default: 'linux'
      sfdx_version:
        description: 'By default, the latest version of the standalone CLI will be installed. To install via npm, supply a version tag such as "latest" or "6".'
        default: ''
        type: string
      sfdx_executable_path:
        description: "Path to sfdx executable to be used by NUTs, defaults to ''"
        default: ''
        type: string
      external_project_git_url:
        description: 'The url that will be cloned.  This contains the NUTs you want to run.  Ex: https://github.com/salesforcecli/plugin-user'
        type: string
        default: ''
      size:
        type: enum
        description: |
          The size of machine resource to use. Defaults to medium.
        default: medium
        enum:
          - medium
          - large
          - xlarge
          - 2xlarge

    executor:
      name: release-management/<< parameters.os >>
      size: << parameters.size >>

    environment:
      TESTKIT_EXECUTABLE_PATH: <<parameters.sfdx_executable_path>>

    steps:
      - release-management/install-node:
          version: <<parameters.node_version>>
          os: <<parameters.os>>
      - release-management/install-sfdx:
          version: <<parameters.sfdx_version>>
          os: <<parameters.os>>
      - run: git clone <<parameters.external_project_git_url>> $(pwd)
      - run:
          name: Install dependencies
          command: yarn
      - run: yarn remove @salesforce/sf-plugins-core
      # windows/powershell does envs differently so we have to have conditional steps
      - when:
          condition:
            equal: ['windows', <<parameters.os>>]
          steps:
            - run: yarn add $env:CIRCLE_PROJECT_USERNAME/$env:CIRCLE_PROJECT_REPONAME#$env:CIRCLE_SHA1
      - when:
          condition:
            equal: ['linux', <<parameters.os>>]
          steps:
            - run: yarn add $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME#$CIRCLE_SHA1
      - run:
          name: install/build sf-plugins-core in node_modules
          command: |
            yarn install
            npm install shx -g
            shx rm -rf node_modules/@oclif/core
            shx rm -rf node_modules/@salesforce/core
            shx rm -rf node_modules/@salesforce/kit
            yarn build
          working_directory: node_modules/@salesforce/sf-plugins-core
      - run:
          name: Build the external project
          command: |
            yarn build
      - run:
          name: Nuts
          command: |
            <<parameters.test_command>>

workflows:
  version: 2
  test-and-release:
    jobs:
      # - release-management/validate-pr:
      #     filters:
      #       branches:
      #         ignore: main
      # - release-management/test-package:
      #     matrix:
      #       parameters:
      #         os:
      #           - linux
      #         node_version:
      #           - latest
      #           - lts
      #           - maintenance
      - external-nut:
          filters:
            branches:
              # we don't run again on main because
              # 1) we already ran on a branch
              # 2) they aren't required and would run in parallel to release job
              ignore: main
          # requires:
          #   - release-management/test-package
          sfdx_version: latest
          size: medium
          matrix:
            parameters:
              os: [windows, linux]
              node_version: [lts]
              external_project_git_url:
              [
                'https://github.com/salesforcecli/plugin-env',
                'https://github.com/salesforcecli/plugin-deploy-retrieve',
              ]
      # - release-management/release-package:
      #     github-release: true
      #     requires:
      #       - release-management/test-package
      #     filters:
      #       branches:
      #         only: main
      #     context: CLI_CTC
  dependabot-automerge:
    triggers:
      - schedule:
          cron: '0 2,5,8,11 * * *'
          filters:
            branches:
              only:
                - main
    jobs:
      - release-management/dependabot-automerge
